/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-08-17 10:45:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class BugReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Bug Report</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascrpt\">\r\n");
      out.write("    	function check()\r\n");
      out.write("    	{\r\n");
      out.write("			if(employeeForm.bug_type.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Bug Type is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(employeeForm.bug_level.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Bug Level is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(employeeForm.priority.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Bug Priority is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(employeeForm.pname.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Project name is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(employeeForm.tester_code.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Tester code is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(employeeForm.bug_date.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Bug Date is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}\r\n");
      out.write("    		if(employeeForm.e_code.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Employee Code is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}       	\r\n");
      out.write("    		if(employeeForm.bug_rectified.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"BugRectified is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}       	\r\n");
      out.write("    		if(employeeForm.status1.value=='')\r\n");
      out.write("    		{\r\n");
      out.write("    			window.alert(\"Employee Status is Empty !\");\r\n");
      out.write("    			return false;\r\n");
      out.write("    		}       	\r\n");
      out.write("    		\r\n");
      out.write("}\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<form name=\"employeeForm\" action=\"buginfo\" onsubmit=\"return check()\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("  	<center>\r\n");
      out.write("  	<h3><font color=\"#FBB117\">&nbsp;&nbsp;&nbsp;&nbsp;Bug Information</font></h3>\r\n");
      out.write("  	<table border=\"0\" cellpadding=\"2\">\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Bug_type</b></font></td><td> <input type=\"text\" name=\"bug_type\"></td></tr>\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Bug_level</b></font></td><td> <input type=\"text\" name=\"bug_level\"></td></tr>\r\n");
      out.write("		<tr><td align=\"right\"><font><b>Priority</b></font></td><td> <input type=\"text\" name=\"priority\"></td></tr>\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Pname</b></font> </td><td><input type=\"text\" name=\"pname\"></td></tr>\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Bug Image</b></font> </td><td><input type=\"text\" name=\"bimage\"></td></tr>\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Tester Code</b></font></td><td> <input type=\"text\" name=\"tester_code\"></td></tr>  		\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Bug Date</b></font> </td><td><input type=\"text\" name=\"bug_date\"></td></tr>\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Employee code</b></font> </td><td><input type=\"text\" name=\"e_code\"></td></tr>\r\n");
      out.write("  		<tr><td align=\"right\"><font ><b>Status</b></font></td>\r\n");
      out.write("  		<td>\r\n");
      out.write("  		<select name=\"status\">\r\n");
      out.write("  			<option value=\"select\">---select---</option>\r\n");
      out.write("  			<option>open</option>\r\n");
      out.write("  			<option>close</option>\r\n");
      out.write("  			<option>resolve</option>\r\n");
      out.write("  			<option>completed</option>\r\n");
      out.write("  		</select>\r\n");
      out.write("  		</td></tr>  		\r\n");
      out.write("  		<tr><td align=\"right\"><font><b>Bug Rectified date</b></font></td><td> <input type=\"text\" name=\"bug_rectifed\"></td></tr>  		\r\n");
      out.write("  		<tr><td align=\"right\"><font><b>status1</b></font> </td><td><input type=\"text\" name=\"status1\"></td></tr>  		\r\n");
      out.write("  		<tr><td align=\"center\" colspan=\"2\"><input type=\"submit\" value=\"submit\"></td></tr>  		  		  		\r\n");
      out.write("  	</table>\r\n");
      out.write("  	</center>\r\n");
      out.write("   </form>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./Footer.jsp", out, false);
      out.write(" \r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
