/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-09-20 19:56:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.util.Random;

public final class UpdateProject1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Random");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Edit Project</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function ChkMandatoryField(F,T){\r\n");
      out.write("	var val= F.value;\r\n");
      out.write("	if(val==\"\"){alert(T+\" is mandatory\");return false;}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function validate()\r\n");
      out.write("{\r\n");
      out.write("	\r\n");
      out.write("	if(ChkMandatoryField(proj.pname,'ProjectName')==false) return false;\r\n");
      out.write("    if(ChkMandatoryField(proj.description,'Description')==false) return false;\r\n");
      out.write("     if(ChkMandatoryField(proj.date,'date')==false) return false;\r\n");
      out.write("    if(ChkMandatoryField(proj.duration,'Duration')==false) return false;\r\n");
      out.write("    if(ChkMandatoryField(proj.name,'Name')==false) return false;\r\n");
      out.write("    if(ChkMandatoryField(proj.address,'Address')==false) return false;\r\n");
      out.write("    if(ChkMandatoryField(proj.phone,'Phone')==false) return false;\r\n");
      out.write("     if(ChkMandatoryField(proj.mailid,'Mailid')==false) return false; \r\n");
      out.write("     if (proj.duration.value < 0){\r\n");
      out.write("			alert(\"Duration Cannot be negative\");\r\n");
      out.write("			return false;\r\n");
      out.write("			}\r\n");
      out.write("     if (proj.phoneno.length < 10){\r\n");
      out.write("			alert(\"Invalid Number\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"./UpdateProject\" method=\"post\" name=\"proj\">\r\n");
      out.write("<h3 align=\"center\">Update Project</h3>\r\n");

Connection con;
PreparedStatement pstmt,pstmt1;
ResultSet rs=null,rs1=null;

String pname,description,date,duration,name,address,phone,email,plead,deptname;
 String pid=request.getParameter("pid");

try{	
	      Class.forName("com.mysql.cj.jdbc.Driver");
       	  con=DriverManager.getConnection("jdbc:mysql://localhost:3306/bts", "root", "");
       	  pstmt=con.prepareStatement("select * from project_details where project_no=?");
       	  pstmt.setString(1,pid);
    	  rs=pstmt.executeQuery();


if(rs!=null){

      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<table align=\"center\">\r\n");

int DisRow=0;
while(rs.next()){
   pid=rs.getString("project_no");
   pname=rs.getString("project_name");
   description=rs.getString("project_description");
   date=rs.getString("sdate");
   duration=rs.getString("duration");
   name=rs.getString("clientname");
   address=rs.getString("clientaddress");
   phone=rs.getString("clientphone");
   email=rs.getString("clientemail");
   plead=rs.getString("projectlead");
   deptname=rs.getString("deptname");
   DisRow++;
   

      out.write("\r\n");
      out.write("<tr><td align=\"center\"></td><td><input type=\"hidden\" value=");
      out.print(pid);
      out.write(" name=\"pid\"></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">ProjectName:</td><td><input type=\"text\" value=");
      out.print(pname);
      out.write(" name=\"pname\"></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">Description:</td><td><textarea cols=\"30\" rows=\"3\" name=\"description\">");
      out.print(description);
      out.write(" </textarea></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">Submission Date</td><td><input type=\"text\"value=");
      out.print(date);
      out.write(" name=\"date\" ></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">Duration:</td><td><input type=\"text\"value=");
      out.print(duration);
      out.write(" name=\"duration\" ></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">Client Name:</td><td><input type=\"text\"value=");
      out.print(name);
      out.write(" name=\"name\" ></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">Address</td><td><input type=\"text\"value=");
      out.print(address);
      out.write(" name=\"address\" ></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">phoneNo:</td><td><input type=\"text\"value=");
      out.print(phone);
      out.write(" name=\"phoneno\" ></td></tr>\r\n");
      out.write("		<tr><td align=\"center\">EmailId:</td><td><input type=\"text\"value=");
      out.print(email);
      out.write(" name=\"emailid\" ></td></tr>\r\n");
      out.write("		<tr><td>Department Name:</td>\r\n");
      out.write("<td><select name=\"deptname\">\r\n");
      out.write("<option>deptname</option>\r\n");

pstmt=con.prepareStatement("select * from department_details");

rs=pstmt.executeQuery();
while(rs.next()){

      out.write("\r\n");
      out.write("<option>");
      out.print(rs.getString("dept_name") );
      out.write("</option>\r\n");

}

      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Project Lead:</td>\r\n");
      out.write("<td><select name=\"plead\">\r\n");
      out.write("<option>plead</option>\r\n");

pstmt=con.prepareStatement("select * from employee_details");
rs=pstmt.executeQuery();
while(rs.next()){

      out.write("\r\n");
      out.write("<option>");
      out.print(rs.getString("loginid"));
      out.write("</option>\r\n");

}

      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");

	
if(DisRow==0){	

      out.write("\r\n");
      out.write("<tr><th colspan=6>No Jobs found</th></tr>\r\n");

}
rs.close();	
}
}
}catch(Exception e){
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<center>\r\n");
      out.write("<input type=\"submit\" value=\"Update\" onclick=\"return validate()\">\r\n");
      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("</form>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./Footer.jsp", out, true);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
