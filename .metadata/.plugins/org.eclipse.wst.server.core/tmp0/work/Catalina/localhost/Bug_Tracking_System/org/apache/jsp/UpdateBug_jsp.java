/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-09-20 20:01:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class UpdateBug_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./DeveloperHeader.jsp", out, false);
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Bug Update</title>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function check() {\r\n");
      out.write("		if (testerForm.bug_type.value == '') {\r\n");
      out.write("			window.alert(\"Bug Type is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.bug_level.value == '') {\r\n");
      out.write("			window.alert(\"Bug Level is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.priority.value == '') {\r\n");
      out.write("			window.alert(\"Bug Priority is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.pname.value == '') {\r\n");
      out.write("			window.alert(\"Project name is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.tester_code.value == '') {\r\n");
      out.write("			window.alert(\"Tester code is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.bug_date.value == '') {\r\n");
      out.write("			window.alert(\"Bug Date is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.e_code.value == \"select\") {\r\n");
      out.write("			window.alert(\"Employee Code is empty !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		if (testerForm.status.value == \"select\") {\r\n");
      out.write("			window.alert(\"Select Status !\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form name=\"testerform\" action=\"UpdateBugReport\"\r\n");
      out.write("		onsubmit=\"return check()\" method=\"post\">\r\n");
      out.write("		<center>\r\n");
      out.write("			<h3>\r\n");
      out.write("				<font color=\"#D02090\" size=\"5px\">&nbsp;&nbsp;&nbsp;&nbsp;Update\r\n");
      out.write("					Bug</font>\r\n");
      out.write("			</h3>\r\n");
      out.write("			<table border=\"0\" cellpadding=\"2\">\r\n");
      out.write("				");

				ServletContext sc = getServletContext();
				String driver = sc.getInitParameter("drivername");
				String url = sc.getInitParameter("url");
				String uname = sc.getInitParameter("username");
				String pwd = sc.getInitParameter("password");
				int bugid;
				bugid = Integer.parseInt(request.getParameter("bugid"));
				try {
					Class.forName(driver);
					Connection con = DriverManager.getConnection(url, uname, pwd);
					System.out.println(".......11........");
					ResultSet rs;

					PreparedStatement pstmt1 = con.prepareStatement("select * from bug_report where bugno=?");
					pstmt1.setInt(1, bugid);
					rs = pstmt1.executeQuery();
					while (rs.next()) {
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Bug_Name</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"bug_name\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(2));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Description</font></td>\r\n");
      out.write("					<td><textarea name=\"Description\">");
      out.print(rs.getString(3));
      out.write("</textarea></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Bug_type</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"bug_type\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(4));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Bug_level</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"bug_level\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(5));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Priority</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"priority\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(6));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Project Name</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"pname\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(7));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Bug_Image</font></td>\r\n");
      out.write("					<td><input type=\"image\" name=\"image\" value=\"");
      out.print(rs.getString(8) );
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Tester Code</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"tester_code\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(9));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Bug Date</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"bug_date\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(10));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Employee code</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"e_code\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(11));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Tester Status</font></td>\r\n");
      out.write("					<td><input type=\"text\" name=\"status\"\r\n");
      out.write("						value=\"");
      out.print(rs.getString(12));
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Rectified Date</font></td>\r\n");
      out.write("					<td><input type=\"date\" name=\"bug_rectified\"></input></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				}
				} catch (Exception e) {
				e.printStackTrace();
				}
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"right\"><font>Status</font></td>\r\n");
      out.write("\r\n");
      out.write("					<td><select name=\"Status\">\r\n");
      out.write("							<option value=\"select\">----Select----</option>\r\n");
      out.write("							<option>Resolve</option>\r\n");
      out.write("							<option>Completed</option>\r\n");
      out.write("\r\n");
      out.write("					</select></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\" colspan=\"2\"><input type=\"hidden\"\r\n");
      out.write("						name=\"bugid\" value=\"");
      out.print(bugid);
      out.write("\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\" colspan=\"2\"><input type=\"submit\"\r\n");
      out.write("						value=\"submit\"></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</center>\r\n");
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
