/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-09-19 22:31:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class ViewBugs1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./TesterHeader.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./base.html", out, false);
      out.write(" \r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>View Bugs</title>\r\n");
      out.write("<script src=\"validation.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".bugimg{\r\n");
      out.write("height:100px;\r\n");
      out.write("width:100px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("	<form name=\"testerForm\" action=\"ViewBugs\" onsubmit=\"return check2()\"\r\n");
      out.write("	method=\"post\">\r\n");
      out.write("	<br>\r\n");
      out.write("		<h4 align=\"center\">\r\n");
      out.write("			<font color=\"green\"> ");

 if (request.getParameter("msg") != null) {
 
      out.write(' ');
      out.print(request.getParameter("msg"));
      out.write(' ');

 }
 
      out.write("\r\n");
      out.write("			</font>\r\n");
      out.write("		</h4>\r\n");
      out.write("\r\n");
      out.write("		<h3 align=\"center\">\r\n");
      out.write("			<font color=\"#FBB117\">&nbsp;&nbsp;&nbsp;&nbsp;View\r\n");
      out.write("				All Bugs</font>\r\n");
      out.write("		</h3>\r\n");
      out.write("\r\n");
      out.write("		<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\" bordercolor=\"#7952B3\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>Bug Name</th>\r\n");
      out.write("				<th>Description</th>\r\n");
      out.write("				<th>Bug Type</th>\r\n");
      out.write("				<th>Bug Level</th>\r\n");
      out.write("				<th>Priority</th>\r\n");
      out.write("				<th>Project Name</th>\r\n");
      out.write("				<th>Bug Image</th>\r\n");
      out.write("				<th>Tester Code</th>\r\n");
      out.write("				<th>Bug Date</th>\r\n");
      out.write("				<th>Employee Code</th>\r\n");
      out.write("				<th>Status</th>\r\n");
      out.write("				<th>Update</th>\r\n");
      out.write("				<th>View</th>\r\n");
      out.write("\r\n");
      out.write("			</tr>\r\n");
      out.write("			");

			ServletContext sc = getServletContext();
			String driver = sc.getInitParameter("drivername");
			String url = sc.getInitParameter("url");
			String uname = sc.getInitParameter("username");
			String pwd = sc.getInitParameter("password");
			try {
				Class.forName(driver);
				Connection con = DriverManager.getConnection(url, uname, pwd);
				//System.out.println(".......11........");
				ResultSet rs;
				HttpSession hs = request.getSession();
				String userid = (String) hs.getAttribute("userid");
				System.out.print("userid" + userid);
				PreparedStatement pstmt = con
				.prepareStatement("select * from bug_report where testercode=? and (status1='resolve' or status1='')");
				pstmt.setString(1, userid);
				rs = pstmt.executeQuery();
				
				while (rs.next()) {
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>");
      out.print(rs.getString(2));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(3));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(4));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(5));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(6));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(7));
      out.write("</td>\r\n");
      out.write("				");
String imageName = rs.getString(8);
  			if(imageName!=""){
  				
      out.write("\r\n");
      out.write("  				<!-- to open image in blank page (zooming) -->\r\n");
      out.write("  				<td><a target=\"_blank\" href=\"BugImages/");
      out.print(imageName);
      out.write("\">\r\n");
      out.write("  				<img src=\"BugImages/");
      out.print(imageName);
      out.write("\" class=\"bugimg\" id=\"bugimgId\"></a></td>\r\n");
      out.write("  				");

  			}
  			
  			
      out.write("\r\n");
      out.write("				\r\n");
      out.write("				<td>");
      out.print(rs.getString(9));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(10));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(11));
      out.write("</td>\r\n");
      out.write("				<td>");
      out.print(rs.getString(12));
      out.write("</td>\r\n");
      out.write("		 		\r\n");
      out.write("				");

				
				if (rs.getString(11).equals("")) {
				
      out.write("\r\n");
      out.write("				<td>&nbsp;</td>\r\n");
      out.write("\r\n");
      out.write("				");

				} else {
				
      out.write("\r\n");
      out.write("				<td><a href=\"./UpdateBug1.jsp?bugid=");
      out.print(rs.getInt(1));
      out.write("\">Update</a></td>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<td><a href=\"./modal.jsp?bugid=");
      out.print(rs.getInt(1));
      out.write("\"><i class=\"bi bi-eye-fill\" ></i></a></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("	\r\n");
      out.write("			");

			
			} //while
				
			

					
			} catch (Exception e) {
			e.printStackTrace();
			}
	
		
			
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
