/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-09-19 22:27:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class AssignBug_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("   \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("   <link rel=\"stylesheet\" href=\"testerstyle.css\" type=\"text/css\">\r\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./base.html", out, false);
      out.write(" \r\n");
      out.write("    <meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("   ");

if(request.getParameter("cat")!=null)
{
if(request.getParameter("cat").equals("Tester"))
{

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./TesterHeader.jsp", out, false);
      out.write("   \r\n");
} 
      out.write('\r');
      out.write('\n');
if(request.getParameter("cat").equals("Developer"))
{

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./DeveloperHeader.jsp", out, false);
      out.write("   \r\n");
}
if(request.getParameter("cat").equals("HrManager"))
{

      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./ManagerHeader.jsp", out, false);
      out.write("   \r\n");
}

}//top if 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>Assign Bug</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" language=\"javascript\">\r\n");
      out.write("function check(){\r\n");
      out.write("	if(testerForm.bug_name.value == ''){\r\n");
      out.write("		window.alert(\"Bug Name is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(testerForm.bug_type.value == ''){\r\n");
      out.write("		window.alert(\"Bug Type is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(testerForm.bug_level.value == ''){\r\n");
      out.write("		window.alert(\"Bug Level is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(testerForm.priority.value == ''){\r\n");
      out.write("		window.alert(\"Bug Priority is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	if(testerForm.tester_code.value=='')\r\n");
      out.write("	{\r\n");
      out.write("		window.alert(\"Tester code is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(testerForm.bug_date.value=='')\r\n");
      out.write("	{\r\n");
      out.write("		window.alert(\"Bug Date is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(testerForm.e_code.value==\"select\")\r\n");
      out.write("	{\r\n");
      out.write("		window.alert(\"Employee Code is empty !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	if(testerForm.status.value==\"select\")\r\n");
      out.write("	{\r\n");
      out.write("		window.alert(\"Select Status !\");\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("	else{\r\n");
      out.write("		alert(\"Bug Assigned Successfully\")\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function fileValidation() {\r\n");
      out.write("    var fileInput = document.getElementById('image');\r\n");
      out.write("     \r\n");
      out.write("    var filePath = fileInput.value;\r\n");
      out.write("    if (filePath == '') {\r\n");
      out.write("        alert(\"Please upload an image\");\r\n");
      out.write("\r\n");
      out.write("    } else {\r\n");
      out.write("        var Extension = FileUploadPath.substring(\r\n");
      out.write("                FileUploadPath.lastIndexOf('.') + 1).toLowerCase();\r\n");
      out.write("        \r\n");
      out.write("        if (Extension == \"gif\" || Extension == \"png\" || Extension == \"bmp\"\r\n");
      out.write("            || Extension == \"jpeg\" || Extension == \"jpg\") {\r\n");
      out.write("        	  if (fileInput.files && fileInput.files[0]) {\r\n");
      out.write("                  var reader = new FileReader();\r\n");
      out.write("\r\n");
      out.write("                  reader.onload = function(e) {\r\n");
      out.write("                      $('#blah').attr('src', e.target.result);\r\n");
      out.write("                  }\r\n");
      out.write("\r\n");
      out.write("                  reader.readAsDataURL(fuData.files[0]);\r\n");
      out.write("              }\r\n");
      out.write("\r\n");
      out.write("          \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        else {\r\n");
      out.write("            alert(\"Photo only allows file types of GIF, PNG, JPG, JPEG and BMP. \");\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"dateget.js\">\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<form name=\"testerForm\" action=\"AssignBug\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write(" \r\n");
      out.write("<br>\r\n");
      out.write("<h5 align=\"center\"><font color=\"red\">\r\n");

HttpSession hs = request.getSession();
String s1 = (String)hs.getAttribute("userid");

if(request.getParameter("msg")!=null){

      out.write('\r');
      out.write('\n');
      out.print(request.getParameter("msg"));
      out.write('\r');
      out.write('\n');
}

      out.write("\r\n");
      out.write("</font></h5>\r\n");
      out.write("<br>\r\n");
      out.write("<h2 align=\"center\"><font color=\"Red\">&nbsp;&nbsp;&nbsp;&nbsp;Assign Bug</font></h2>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"bug_name\" class=\"col-sm-2 col-form-label col-form-label-lg\">Bug Name</label>\r\n");
      out.write("    <input type=\"text\" class=\"form-control form-control-lg\" id=\"bug_name\" name=\"bug_name\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"bug_des\" class=\"col-sm-2 col-form-label col-form-label-lg\">Bug Description</label>\r\n");
      out.write("    <textarea class=\"form-control\" id=\"bug_des\" name=\"bug_des\"></textarea>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"bug_type\" class=\"col-sm-2 col-form-label col-form-label-lg\">Bug Type</label>\r\n");
      out.write("    <input type=\"text\" class=\"form-control\" id=\"bug_type\" name=\"bug_type\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"bug_level\" class=\"col-sm-2 col-form-label col-form-label-lg\">Bug level</label>\r\n");
      out.write("    <input type=\"text\" class=\"form-control\" id=\"bug_level\" name=\"bug_level\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"priority\" class=\"col-sm-2 col-form-label col-form-label-lg\">Priority</label>\r\n");
      out.write("     <select class=\"form-control\" id=\"priority\" name=\"priority\">\r\n");
      out.write("     	<option>High</option>\r\n");
      out.write("     	<option>Medium</option>\r\n");
      out.write("     	<option>Low</option>\r\n");
      out.write("     	<option>None</option>\r\n");
      out.write("     </select>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"pname\" class=\"col-sm-2 col-form-label col-form-label-lg\">Project Name</label>\r\n");

  		ServletContext sc=getServletContext();
		String driver=sc.getInitParameter("drivername");
		String url=sc.getInitParameter("url");
		String uname=sc.getInitParameter("username");
		String pwd=sc.getInitParameter("password");
		
		try{
			Class.forName(driver);
			Connection  con=DriverManager.getConnection(url,uname,pwd);
			
			ResultSet rs,rs1;
			PreparedStatement pstmt=con.prepareStatement("select loginid from employee_details");
			rs=pstmt.executeQuery();
			
			PreparedStatement pstmt1=con.prepareStatement("select project_name from project_details");
			rs1=pstmt1.executeQuery();
  		
      out.write(" \r\n");
      out.write("     <select class=\"form-control\" id=\"pname\" name=\"pname\" class=\"col-sm-2 col-form-label col-form-label-lg\">\r\n");
      out.write("     	<option>---Select---</option>\r\n");
      out.write("  		");

  		while(rs1.next()){
  		
      out.write("\r\n");
      out.write("  		<option>");
      out.print(rs1.getString(1));
      out.write("</option>\r\n");
      out.write("  		");
}
      out.write("\r\n");
      out.write("     </select>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("    <label for=\"image\" class=\"col-sm-2 col-form-label col-form-label-lg\">Bug Image</label>\r\n");
      out.write(" <input type=\"file\" class=\"form-control-file\" id=\"image\" onchange=\"return fileValidation()\" name=\"image\" onSubmit=\"\">\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"tester_code\" class=\"col-sm-2 col-form-label col-form-label-lg\">Tester Code</label>\r\n");
      out.write("    <input type=\"text\" class=\"form-control\" id=\"tester_code\" name=\"tester_code\" value=");
      out.print(s1);
      out.write(" readonly>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"bug_date\" class=\"col-sm-2 col-form-label col-form-label-lg\">Bug Date</label>\r\n");
      out.write("    <input type=\"date\" class=\"form-control\" id=\"bug_date\" name=\"bug_date\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"e_code\" class=\"col-sm-2 col-form-label col-form-label-lg\">Employee code</label>\r\n");
      out.write("    <select class=\"form-control\" id=\"e_code\" name=\"e_code\">\r\n");
      out.write("    <option value=\"select\">---Select---</option>\r\n");
      out.write("  		");

  		while(rs.next()){
  		
      out.write("\r\n");
      out.write("  		<option>");
      out.print(rs.getString(1) );
      out.write("</option>\r\n");
      out.write("  		");

  		}
		}catch(Exception ex){
			ex.printStackTrace();
		}
  		
      out.write("\r\n");
      out.write("    </select>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("<label for=\"status\" class=\"col-sm-2 col-form-label col-form-label-lg\">Status</label>\r\n");
      out.write("    <select class=\"form-control\" id=\"status\" name=\"status\">\r\n");
      out.write("    <option value=\"select\">---select---</option>\r\n");
      out.write("  			<option>open</option>\r\n");
      out.write("  			<option>close</option>\r\n");
      out.write("    </select>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <p align=\"center\" >\r\n");
      out.write("    <button type=\"submit\" class=\"btn btn-success\" onclick=\"return check()\">Submit</button></p>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./Footer.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
